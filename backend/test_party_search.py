#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'app'))

async def test_party_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫...")
    
    try:
        from app.agents.style_agent import StyleAgent
        from app.api.v1.endpoints.profile.schemas import ProfileOut
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä StyleAgent
        style_agent = StyleAgent()
        print("‚úÖ StyleAgent —Å–æ–∑–¥–∞–Ω")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫
        test_messages = [
            "—á—Ç–æ –º–æ–∂–Ω–æ –æ–¥–µ—Ç—å –Ω–∞ –≤–µ—á–µ—Ä–∏–Ω–∫—É",
            "–Ω—É–∂–Ω–∞ –æ–¥–µ–∂–¥–∞ –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–∞",
            "—á—Ç–æ –Ω–∞–¥–µ—Ç—å –Ω–∞ —Ç–æ—Ä–∂–µ—Å—Ç–≤–æ",
            "–≤–µ—á–µ—Ä–∏–Ω–∫–µ",
            "–ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –Ω–∞—Ä—è–¥"
        ]
        
        print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–µ—á–µ—Ä–∏–Ω–æ–∫:")
        for message in test_messages:
            parsed = style_agent._parse_user_request(message)
            is_party = parsed.get('party_request', False)
            category = parsed.get('category')
            price_range = parsed.get('price_range')
            
            print(f"  '{message}' -> party_request: {is_party}, category: {category}, price: {price_range}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤:")
        for message in test_messages:
            is_product = style_agent._is_product_request(message)
            print(f"  '{message}' -> –∑–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤: {is_product}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_party_search()) 