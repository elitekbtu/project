#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã ConversationManager
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(os.path.join(os.path.dirname(__file__), 'app'))

from app.agents.conversation_manager import ConversationManager

async def test_conversation_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ConversationManager"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ConversationManager...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    manager = ConversationManager()
    
    # –¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    print("\nüìù –¢–µ—Å—Ç 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è")
    response1 = await manager.process_message("–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?", user_id=1)
    print(f"–û—Ç–≤–µ—Ç: {response1['reply']}")
    print(f"–ù–∞–º–µ—Ä–µ–Ω–∏–µ: {response1['intent']}")
    print(f"–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response1['confidence']:.2f}")
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤
    print("\nüìù –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤")
    response2 = await manager.process_message("–ü–æ–∫–∞–∂–∏ –º–Ω–µ —Ñ—É—Ç–±–æ–ª–∫–∏", user_id=1)
    print(f"–û—Ç–≤–µ—Ç: {response2['reply']}")
    print(f"–ù–∞–º–µ—Ä–µ–Ω–∏–µ: {response2['intent']}")
    print(f"–¢–æ–≤–∞—Ä—ã –Ω–∞–π–¥–µ–Ω–æ: {len(response2['items'])}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –¢–µ—Å—Ç 3: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã")
    stats = manager.get_system_stats()
    print(f"–í—Å–µ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤: {stats['total_conversations']}")
    print(f"–£—Å–ø–µ—à–Ω—ã—Ö: {stats['successful_conversations']}")
    print(f"–ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤: {stats['active_contexts']}")
    
    # –¢–µ—Å—Ç 4: –°–≤–æ–¥–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    print("\nüìã –¢–µ—Å—Ç 4: –°–≤–æ–¥–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞")
    summary = manager.get_conversation_summary(1)
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π: {summary['interaction_count']}")
    print(f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {summary['current_state']}")
    print(f"–ü–æ—Ç–æ–∫ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞: {summary['conversation_flow']}")
    
    # –¢–µ—Å—Ç 5: –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    print("\n‚ö° –¢–µ—Å—Ç 5: –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    metrics = manager.get_performance_metrics()
    print(f"–û–±—â–∏–π —É—Å–ø–µ—Ö: {metrics['overall_success_rate']:.2%}")
    print(f"–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: {metrics['average_response_time']:.2f}—Å")
    print(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã: {metrics['system_health']['uptime_metric']}")
    
    # –¢–µ—Å—Ç 6: –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
    print("\nüíæ –¢–µ—Å—Ç 6: –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
    export_data = manager.export_conversation_data(1)
    print(f"–¢–∏–ø —ç–∫—Å–ø–æ—Ä—Ç–∞: {export_data['export_type']}")
    print(f"–í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞: {export_data['export_timestamp']}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

async def test_error_handling():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫"""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫...")
    
    manager = ConversationManager()
    
    # –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    print("\nüìù –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º")
    response = await manager.process_message("", user_id=2)
    print(f"–£—Å–ø–µ—Ö: {response['success']}")
    print(f"–û—Ç–≤–µ—Ç: {response['reply'][:50]}...")
    
    # –¢–µ—Å—Ç —Å –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    print("\nüìù –¢–µ—Å—Ç —Å –¥–ª–∏–Ω–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º")
    long_message = "–≠—Ç–æ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ " * 100
    response = await manager.process_message(long_message, user_id=2)
    print(f"–£—Å–ø–µ—Ö: {response['success']}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

async def test_multiple_users():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"""
    
    print("\nüë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...")
    
    manager = ConversationManager()
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users = [10, 20, 30]
    messages = [
        "–ü—Ä–∏–≤–µ—Ç!",
        "–ü–æ–∫–∞–∂–∏ —Ñ—É—Ç–±–æ–ª–∫–∏",
        "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
    ]
    
    for user_id in users:
        print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id}:")
        for message in messages:
            response = await manager.process_message(message, user_id=user_id)
            print(f"  '{message}' -> {response['intent']}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = manager.get_system_stats()
    print(f"\nüìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤: {stats['active_contexts']}")
    
    # –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
    manager.reset_user_context()
    stats_after = manager.get_system_stats()
    print(f"üìä –ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏: {stats_after['active_contexts']}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üß™ –ù–∞—á–∏–Ω–∞–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ConversationManager")
    print("=" * 60)
    
    try:
        await test_conversation_manager()
        await test_error_handling()
        await test_multiple_users()
        
        print("\n" + "=" * 60)
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(main()) 