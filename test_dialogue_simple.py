#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç –ª–æ–≥–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞ –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import re

def is_greeting(user_message: str) -> bool:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    greeting_patterns = [
        r"–ø—Ä–∏–≤–µ—Ç", r"–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", r"–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", r"–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", r"–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä",
        r"hello", r"hi", r"hey", r"–¥–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫"
    ]
    
    msg = user_message.lower()
    return any(re.search(p, msg) for p in greeting_patterns)

def is_positive_response(user_message: str) -> bool:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã"""
    positive_patterns = [
        r"–¥–∞", r"–∫–æ–Ω–µ—á–Ω–æ", r"—Ö–æ—á—É", r"–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", r"–ø–æ–º–æ–≥–∏", r"–¥–∞–≤–∞–π", r"—Ö–æ—Ä–æ—à–æ",
        r"yes", r"sure", r"ok", r"okay", r"—Ö–æ—Ç–µ–ª –±—ã", r"—Ö–æ—Ç–µ–ª–∞ –±—ã", r"–ø–æ–º–æ–≥–∏—Ç–µ"
    ]
    
    msg = user_message.lower()
    return any(re.search(p, msg) for p in positive_patterns)

def is_product_request(user_message: str) -> bool:
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã"""
    product_patterns = [
        r"—Ñ—É—Ç–±–æ–ª–∫", r"—Ä—É–±–∞—à–∫", r"–¥–∂–∏–Ω—Å", r"–ø–ª–∞—Ç—å", r"–∫—É—Ä—Ç–∫", r"–∫–æ—Å—Ç—é–º", r"–±—Ä—é–∫",
        r"–ø–æ–∫–∞–∂–∏", r"–Ω–∞–π–¥–∏", r"–∏—â—É", r"–Ω—É–∂–Ω", r"—Ö–æ—á—É", r"–¥–∞–π", r"–¥–∞–π—Ç–µ",
        r"—Ü–µ–Ω–∞", r"—Å—Ç–æ–∏–º–æ—Å—Ç—å", r"–¥–∏–∞–ø–∞–∑–æ–Ω", r"–æ—Ç", r"–¥–æ", r"—Ç—ã—Å—è—á", r"—Ç–µ–Ω–≥–µ",
        r"—Ü–≤–µ—Ç", r"—Ä–∞–∑–º–µ—Ä", r"–±—Ä–µ–Ω–¥", r"—Å—Ç–∏–ª—å", r"–º–æ–¥–∞", r"–æ–¥–µ–∂–¥"
    ]
    
    msg = user_message.lower()
    return any(re.search(p, msg) for p in product_patterns)

def test_dialogue_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –¥–∏–∞–ª–æ–≥–∞"""
    
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –¥–∏–∞–ª–æ–≥–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    print("\nüìù –¢–µ—Å—Ç 1: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ")
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ø—Ä–∏–≤–µ—Ç")
    
    result = is_greeting("–ø—Ä–∏–≤–µ—Ç")
    print(f"is_greeting('–ø—Ä–∏–≤–µ—Ç') = {result}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç
    print("\nüìù –¢–µ—Å—Ç 2: –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –¥–∞, –ø–æ–º–æ–≥–∏")
    
    result = is_positive_response("–¥–∞, –ø–æ–º–æ–≥–∏")
    print(f"is_positive_response('–¥–∞, –ø–æ–º–æ–≥–∏') = {result}")
    
    result = is_product_request("–¥–∞, –ø–æ–º–æ–≥–∏")
    print(f"is_product_request('–¥–∞, –ø–æ–º–æ–≥–∏') = {result}")
    
    # –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤
    print("\nüìù –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å —Ç–æ–≤–∞—Ä–æ–≤")
    print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ø–æ–∫–∞–∂–∏ —Ñ—É—Ç–±–æ–ª–∫–∏")
    
    result = is_product_request("–ø–æ–∫–∞–∂–∏ —Ñ—É—Ç–±–æ–ª–∫–∏")
    print(f"is_product_request('–ø–æ–∫–∞–∂–∏ —Ñ—É—Ç–±–æ–ª–∫–∏') = {result}")
    
    result = is_greeting("–ø–æ–∫–∞–∂–∏ —Ñ—É—Ç–±–æ–ª–∫–∏")
    print(f"is_greeting('–ø–æ–∫–∞–∂–∏ —Ñ—É—Ç–±–æ–ª–∫–∏') = {result}")
    
    # –¢–µ—Å—Ç 4: –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π
    print("\nüìù –¢–µ—Å—Ç 4: –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–π")
    
    greetings = ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "hello", "hi", "–∫–∞–∫ –¥–µ–ª–∞"]
    for greeting in greetings:
        result = is_greeting(greeting)
        print(f"is_greeting('{greeting}') = {result}")
    
    # –¢–µ—Å—Ç 5: –†–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    print("\nüìù –¢–µ—Å—Ç 5: –†–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")
    
    positive_responses = ["–¥–∞", "–∫–æ–Ω–µ—á–Ω–æ", "—Ö–æ—á—É", "–∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ", "–ø–æ–º–æ–≥–∏", "–¥–∞–≤–∞–π", "—Ö–æ—Ä–æ—à–æ"]
    for response in positive_responses:
        result = is_positive_response(response)
        print(f"is_positive_response('{response}') = {result}")
    
    # –¢–µ—Å—Ç 6: –†–∞–∑–ª–∏—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–æ–≤–∞—Ä–æ–≤
    print("\nüìù –¢–µ—Å—Ç 6: –†–∞–∑–ª–∏—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã —Ç–æ–≤–∞—Ä–æ–≤")
    
    product_requests = ["—Ñ—É—Ç–±–æ–ª–∫–∏", "—Ä—É–±–∞—à–∫–∏", "–¥–∂–∏–Ω—Å—ã", "–ø–æ–∫–∞–∂–∏", "–Ω–∞–π–¥–∏", "–∏—â—É", "–Ω—É–∂–Ω—ã"]
    for request in product_requests:
        result = is_product_request(request)
        print(f"is_product_request('{request}') = {result}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_dialogue_logic() 